
基于微信平台的学生订餐公众号



第二小组：陈嘉欣、符潇、刘瑄
 2015/11/01


 

1引言	3
1.1编写目的	3
1.2背景	3
1.3定义	3
1.4参考资料	3
2总体设计	4
2.1需求规定	4
2.2运行环境	4
2.3基本设计概念和处理流程	4
2.4结构	4
2.5功能器求与程序的关系	4
2.6人工处理过程	4
2.7尚未问决的问题	4
3接口设计	4
3.1用户接口	4
3.2外部接口	4
3.3内部接口	4
4运行设计	4
4.1运行模块组合	4
4.2运行控制	4
4.3运行时间	4
5系统数据结构设计	4
5.1逻辑结构设计要点	4
5.2物理结构设计要点	4
5.3数据结构与程序的关系	4
6系统出错处理设计	4
6.1出错信息	4
6.2补救措施	4
6.3系统维护设计	4
 
总体设计书
1引言
1.1编写目的
（1）编写软件总体设计书是在需求分析之后进行，编写软件总体设计书的目的是从设计的角度来确定各功能的逻辑实现方案，设计思路和构想，进一步细化系统结构，为编程人员和设计人员提供交流的工具。

（2）本软件需求说明书的预期读者为用户、编程人员、系统设计人员和系统开发人员。
1.2背景
在需求说明对功能和数据要求定义的基础上，对微信订餐公众号总体结构和各个模块间的联系进行说明。
（1）软件系统名称：基于微信平台的学生订餐公众号。
（2）任务提出者：周伟老师。
     开发小组成员：陈嘉欣、符潇、刘瑄。
     用户：华中师范大学学生。
（3）实现本软件的计算中心或计算机网络：Internet及web技术。
（4）同其他系统或其他机构的基本的相互来往关系：微信订餐系统是把线下服务和与互联网结为一体，通过微信线上揽客，线下服务客户，达成成交。实现了互联网和线下实体店的精密结合与全方位互动。
1.3定义
专门术语：
（1）SQL Server 2005：一个全面的数据库平台，使用集成的商业智能 (BI)工具提供了企业级的数据管理。SQL Server 2005数据库引擎为关系型数据和结构化数据提供了更安全可靠的存储功能，可以构建和管理用于业务的高可用和高性能的数据应用程序。

（2）Java：一种可以撰写跨平台应用程序的面向对象的程序设计语言。Java技术具有卓越的通用性、高效性、平台移植性和安全性，广泛应用于PC、数据中心、游戏控制台、科学超级计算机、移动电话和互联网，同时拥有全球最大的开发者专业社群。

（3）API：应用程序编程接口，是一些预先定义的函数，目的是提供应用程序 与开发人员基于某软件或硬件的以访问一组例程的能力。

（4） CMS:网站内容管理系统，即Content Management System。
1.4参考资料
软件概要设计说明书文档（国标）
《软件工程》（第二版） 叶俊民
	《软件技术基础》
2总体设计
2.1需求规定
（1）	输入项目


输入数据	数据类型	媒体	格式
用户姓名	Char	文本编码	字符
用户地址	Char	文本编码	字符
用户电话	Long	文本编码	数值
管理员信息	Char	文本编码	数值+字符
用户需修改信息	Char	文本编码	字符+数值
订餐要求	Char	文本编码	字符
用户评价	Char	 文本编码	字符


（2）	输出项目


输出数据	数据类型	媒体	格式
菜品信息	Char	图像编码+文本编码	字符+二进制
订单信息	Char	文本编码	字符+数值
修改信息	Char	文本编码	字符+数值
公众管理号界面	Char	图像编码+文本编码	字符+二进制


（3）	处理的功能性要求：包括对菜品信息的及时更新要求、订单信息及时
确认要求、用户信息保密要求、操作界面简单友好等。
2.2运行环境
	该系统需要的硬件设备如下：
（1）	运行环境：移动客户端。
（2）	内存：64MB以上的内存。
（3）	外存设备：热拔插硬盘，外存容量为100GB。

该系统的支持软件如下：
SQL Server 2005、Java应用软件即MyEclipse8.0、Dreamweaver。
2.3基本设计概念和处理流程
 基本设计概念：

（1）订餐用户可以通过微信公众号浏览和选择菜品信息：订餐用户只需登陆自己的微信号，打开学生订餐公众号，就可以在网页上看到菜品信息列表，并且添加自己需要的菜品；

（2）订餐用户提交订单：订单细节包括用户以选择的菜品、选择送餐的时间、用户的送餐地址和用户的电话号码。

（3）订餐用户确认付款：微信上的每份订单都将实时存入后台数据库，后台操作人员确认订单，确认后将及时实施审核订单：完成网上支付，向顾客送餐，确认完成网上交易，评价菜品及送货速度。

处理流程：

 
2.4结构
      
2.5功能需求与程序的关系

	用户信息模块	用户订餐模块	用户管理模块
用户修改个人资料	√		
用户浏览菜单		√	
用户下单		√	
确认付款		√	
用户评价		√	
管理用户信息			√
菜单管理			√
管理订单			√
管理用户评价			√

2.6人工处理过程
	各个模块在输入输出数据信息时，需要必要的人工处理。
	（1）用户信息模块：用户信息模块是系统为用户提供了一个修改个人资料以及信息的接口。已注册的用户在密码验证通过后，提交申请修改个人资料的请求，并提交给系统管理员，管理员在审核信息后，手动将后台数据库中的注册用户基本信息表做出修改和更新。而对于未注册的用户，则需要提交注册基本信息并提交，系统管理员在检查核实该用户无不良记录后，才能人工在数据库中的用户基本表中添加一条新的记录。
	（2）用户订餐模块：这是系统功能的主要实现部分。人工处理主要为，在用户下单之后，需要专门的配送人员进行配送，并询问相关反馈。
	（3）管理员模块：在用户定下菜品之后，需要向相关食堂或餐馆通知菜品的炒制，这项工作需要人工完成。此外，系统需要人工手动处理用户反馈信息，总结并反馈给管理者。
2.7尚未问决的问题
	由于系统需要接收的反馈或建议信息过多，通过人工处理费时费力，故需要通过网络爬虫技术抓取网路上的信息，并做出统计与总结。但需在网页上进行，存在移动客户端到个人PC端信息传输的问题。
3接口设计
3.1用户接口
	该系统使用网页格式提供用户界面，使用Dreamweaver提供的标准控件设计界面。
3.2外部接口
	硬件接口：无。
	软件接口：通过桥接器与Microsoft SQL2008数据库连接。
3.3内部接口
	通过面向对象语言设计类，在系统中实现对类的属性和方法的调用。
4运行设计
4.1运行模块组合
	本系统主要以窗口页面为模块，一个窗口完成一个模块的工作，而一个模块中也包含进入到父模块以及子模块的索引链接，通过这些链接实现模块间不同功能的连接和组合。三个主模块之间都是相互独立的。各模块之间主要以传递数据参数来实现模块之间的合作和数据共享。这些窗口模块的运行都是以微信平台为基础运行的。
4.2运行控制
	用户可以根据系统的下拉菜单进行选择，也可以通过系统允许的合法输入，向系统提出请求。系统并不限定用户的输入，异常由程序内部进行处理，并给出提示信息。
4.3运行时间
	由用户决定，但每次操作相应时间上限应控制在1s以内。
5系统数据结构设计
5.1逻辑结构设计要点
顾客表：
列名	数据类型	长度	主键
用户名	char	20	Yes
常用地址	char	100	
联系方式	int	11	

订购单表
列名	数据类型	长度	主键
订单号	int	20	Yes
用户名	char	20	
联系方式	int	11	
地址	char	100	
菜品名	int	20	
订单时间	date		
总价	money		

    菜品表
列名	数据类型	长度	主键
菜品号	int	20	Yes
菜品名	char	20	
价格	Money		
	
	餐馆表
列名	数据类型	长度	主键
餐馆号	int	20	Yes
餐馆名	char	20	
	
	供应表
列名	数据类型	长度	主键
餐馆号	int	20	Yes
餐馆名	char	20	
菜品号	int	20	
菜品名	char	20	

5.2物理结构设计要点
	系统E-R图如下：
 
	订购的属性表如下：

 


5.3数据结构与程序的关系
数据结构为关系型数据库，在程序中可以通过标准SQL语句与数据结构进行交互，交互过程中采用通用的数据库访问接口，实现对数据结构形式的访问。
6系统出错处理设计
6.1出错信息
用户信息错误	系统所输出信息与用户的真实信息不符。为数据库连接错误。应尽快找管理员进行修改
菜品添加错误	输出为没有添加成功，解决办法：检查数据库插入语句是否正确并修改
乱码	系统输出为乱码时，解决办法：对提交的汉字信息重新进行编码
页面更新错误	可能是网络连接不够稳定，页面无法加载。解决办法：减少网络负载量
6.2补救措施
	（1）数据在数据库中已有备份，所以在系统出错后可以运用数据库的恢复功能，还原之前的正确数据与信息，并且依靠日志文件使系统重新启动，这样用户数据就不会有丢失的危险。
	（2）逐步完善程序，减少系统使用风险。
	（3）如果该系统崩溃重启后，可以重新恢复到前一个故障点，利用恢复再启动技术使软件从故障点恢复执行或使用户从头开始重新运行。
6.3系统维护设计
	各个程序之间的对应关系，可采用如下的矩阵图的形式：


	备份数据库程序	用户信息模块程序	订餐模块程序	管理员模块程序
数据库的维护	√			
软件功能的维护		√	√	√
  
对于数据库的维护，主要是经常备份数据库的内容，以防止数据库内容的丢失。  
对于软件功能方面的维护，由于采用了模块化设计方法，每个模块程序之间（即用户信息模块、订餐模块、管理员模块）的相对独立性较强，这样对软件的维护带来了很大的方便，对于单独功能的修改只需修改相应的模块即可。而对于功能的添加，只要增加相应的模块即可。我们还会对软件进行定期的维护和修改，以使其更加安全，更加方便和快捷。
